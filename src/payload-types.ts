/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * The ID of the group as used in the CeviDB.
 */
export type TheIDOfTheGroup = number;
/**
 * The name of the group as used in the CeviDB.
 */
export type TheNameOfTheGroup = string;
/**
 * The groups the user is in as extracted from the CeviDB profile.
 */
export type GroupsOfTheUser = {
  id?: TheIDOfTheGroup;
  name?: TheNameOfTheGroup;
  [k: string]: unknown;
}[];
/**
 * This field indicates whether the document is published in the corresponding locale
 */
export type IsPublishedInCorrespondingLocale = boolean;
/**
 * The ID of the group as used in the CeviDB.
 */
export type TheIDOfTheGroup1 = number;
/**
 * The name of the group as used in the CeviDB.
 */
export type TheNameOfTheGroup1 = string;
/**
 * The groups the user is in as extracted from the CeviDB profile.
 */
export type GroupsOfTheUser1 = {
  id?: TheIDOfTheGroup1;
  name?: TheNameOfTheGroup1;
  [k: string]: unknown;
}[];

export interface Config {
  auth: {
    editor_users: EditorUserAuthOperations;
  };
  collections: {
    editor_users: EditorUser;
    media: Media;
    blog: Blog;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    seo: Seo;
    headerNav: HeaderNav;
    footerNav: FooterNav;
  };
  locale: 'en-US' | 'de-CH' | 'fr-CH';
  user: EditorUser & {
    collection: 'editor_users';
  };
}
export interface EditorUserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "editor_users".
 */
export interface EditorUser {
  id: string;
  groups: GroupsOfTheUser;
  cevi_db_uuid: number;
  email: string;
  fullName: string;
  function: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog".
 */
export interface Blog {
  id: string;
  _localized_status: LocalizedPublishingStatus;
  blogH1: string;
  urlSlug: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Holds the publishing status of the document in each locale
 */
export interface LocalizedPublishingStatus {
  published: IsPublishedInCorrespondingLocale;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  groups: GroupsOfTheUser1;
  cevi_db_uuid: number;
  email: string;
  fullName: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'editor_users';
        value: string | EditorUser;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'blog';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'editor_users';
    value: string | EditorUser;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'editor_users';
    value: string | EditorUser;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo".
 */
export interface Seo {
  id: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headerNav".
 */
export interface HeaderNav {
  id: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footerNav".
 */
export interface FooterNav {
  id: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}